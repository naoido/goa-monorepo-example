// Code generated by goa v3.21.1, DO NOT EDIT.
//
// greet service
//
// Command:
// $ goa gen goa-example/microservices/greet/design

package greet

import (
	"context"

	"goa.design/goa/v3/security"
)

// Greet service
type Service interface {
	// Greet method
	Greet(context.Context) (res string, err error)
	// Hello method
	Hello(context.Context, *HelloPayload) (res string, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "greet"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "greet"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"Greet", "Hello"}

// HelloPayload is the payload type of the greet service Hello method.
type HelloPayload struct {
	// access_token
	Token string
}
