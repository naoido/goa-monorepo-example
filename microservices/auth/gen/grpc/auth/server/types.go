// Code generated by goa v3.21.1, DO NOT EDIT.
//
// auth gRPC server types
//
// Command:
// $ goa gen goa-example/microservices/auth/design

package server

import (
	auth "goa-example/microservices/auth/gen/auth"
	authpb "goa-example/microservices/auth/gen/grpc/auth/pb"
)

// NewLoginPayload builds the payload of the "login" endpoint of the "auth"
// service from the gRPC request type.
func NewLoginPayload(message *authpb.LoginRequest) *auth.LoginPayload {
	v := &auth.LoginPayload{
		Username: message.Username,
		Password: message.Password,
	}
	return v
}

// NewProtoLoginResponse builds the gRPC response type from the result of the
// "login" endpoint of the "auth" service.
func NewProtoLoginResponse(result *auth.LoginResult) *authpb.LoginResponse {
	message := &authpb.LoginResponse{
		AccessToken:  result.AccessToken,
		RefreshToken: result.RefreshToken,
	}
	return message
}

// NewLogoutPayload builds the payload of the "logout" endpoint of the "auth"
// service from the gRPC request type.
func NewLogoutPayload(token string) *auth.LogoutPayload {
	v := &auth.LogoutPayload{}
	v.Token = token
	return v
}

// NewProtoLogoutResponse builds the gRPC response type from the result of the
// "logout" endpoint of the "auth" service.
func NewProtoLogoutResponse() *authpb.LogoutResponse {
	message := &authpb.LogoutResponse{}
	return message
}

// NewRefreshPayload builds the payload of the "refresh" endpoint of the "auth"
// service from the gRPC request type.
func NewRefreshPayload(message *authpb.RefreshRequest) *auth.RefreshPayload {
	v := &auth.RefreshPayload{
		RefreshToken: message.RefreshToken,
	}
	return v
}

// NewProtoRefreshResponse builds the gRPC response type from the result of the
// "refresh" endpoint of the "auth" service.
func NewProtoRefreshResponse(result *auth.RefreshResult) *authpb.RefreshResponse {
	message := &authpb.RefreshResponse{
		AccessToken:  result.AccessToken,
		RefreshToken: result.RefreshToken,
	}
	return message
}
