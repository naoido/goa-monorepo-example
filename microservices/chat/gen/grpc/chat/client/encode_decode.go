// Code generated by goa v3.21.1, DO NOT EDIT.
//
// chat gRPC client encoders and decoders
//
// Command:
// $ goa gen goa-example/microservices/chat/design

package client

import (
	"context"
	chatpb "goa-example/microservices/chat/gen/grpc/chat/pb"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
)

// BuildCreatRoomFunc builds the remote method to invoke for "chat" service
// "creat-room" endpoint.
func BuildCreatRoomFunc(grpccli chatpb.ChatClient, cliopts ...grpc.CallOption) goagrpc.RemoteFunc {
	return func(ctx context.Context, reqpb any, opts ...grpc.CallOption) (any, error) {
		for _, opt := range cliopts {
			opts = append(opts, opt)
		}
		if reqpb != nil {
			return grpccli.CreatRoom(ctx, reqpb.(*chatpb.CreatRoomRequest), opts...)
		}
		return grpccli.CreatRoom(ctx, &chatpb.CreatRoomRequest{}, opts...)
	}
}

// DecodeCreatRoomResponse decodes responses from the chat creat-room endpoint.
func DecodeCreatRoomResponse(ctx context.Context, v any, hdr, trlr metadata.MD) (any, error) {
	message, ok := v.(*chatpb.CreatRoomResponse)
	if !ok {
		return nil, goagrpc.ErrInvalidType("chat", "creat-room", "*chatpb.CreatRoomResponse", v)
	}
	res := NewCreatRoomResult(message)
	return res, nil
}
