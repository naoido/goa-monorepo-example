// Code generated by goa v3.21.1, DO NOT EDIT.
//
// auth client
//
// Command:
// $ goa gen goa-example/microservices/auth/design

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "auth" service client.
type Client struct {
	LoginEndpoint   goa.Endpoint
	LogoutEndpoint  goa.Endpoint
	RefreshEndpoint goa.Endpoint
}

// NewClient initializes a "auth" service client given the endpoints.
func NewClient(login, logout, refresh goa.Endpoint) *Client {
	return &Client{
		LoginEndpoint:   login,
		LogoutEndpoint:  logout,
		RefreshEndpoint: refresh,
	}
}

// Login calls the "login" endpoint of the "auth" service.
// Login may return the following errors:
//   - "unauthenticated" (type Unauthenticated)
//   - "permission_denied" (type PermissionDenied)
//   - "invalid_argument" (type InvalidArgument)
//   - "internal" (type Internal)
//   - error: internal error
func (c *Client) Login(ctx context.Context, p *LoginPayload) (res *LoginResult, err error) {
	var ires any
	ires, err = c.LoginEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*LoginResult), nil
}

// Logout calls the "logout" endpoint of the "auth" service.
// Logout may return the following errors:
//   - "permission_denied" (type PermissionDenied)
//   - "invalid_argument" (type InvalidArgument)
//   - "internal" (type Internal)
//   - error: internal error
func (c *Client) Logout(ctx context.Context, p *LogoutPayload) (err error) {
	_, err = c.LogoutEndpoint(ctx, p)
	return
}

// Refresh calls the "refresh" endpoint of the "auth" service.
// Refresh may return the following errors:
//   - "permission_denied" (type PermissionDenied)
//   - "invalid_argument" (type InvalidArgument)
//   - "internal" (type Internal)
//   - error: internal error
func (c *Client) Refresh(ctx context.Context, p *RefreshPayload) (res *RefreshResult, err error) {
	var ires any
	ires, err = c.RefreshEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*RefreshResult), nil
}
